name: CI
on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  build:
    env:
      SURGE_LOGIN: ${{secrets.SURGE_LOGIN}}
      SURGE_TOKEN: ${{secrets.SURGE_TOKEN}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        name: Cache node_modules
        with:
          path: ~/.yarn
          key: ${{runner.os}}-bimbo-${{ hashFiles('**/yarn.lock')}}
          restore-keys: |
            ${{runner.os}}-bimbo-
      - name: Use NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn format:check
      - run: yarn test --coverage
        env:
          CI: true
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage
      - name: Build Project
        if: github.event_name == 'push'
        run: yarn build
      - name: Upload Build Folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
      - name: Zip up files
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      - name: Create a release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.CUSTOM_TOKEN}}
      - name: Deploy to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domain ceaseless-adjustment.surge.sh
      - name: Deploy to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx surge --project ./build --domain fast-sleep.surge.sh
      - name: Upload coverage reports
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx codecov
        env:
          CODECOV_TOKEN: = ${{secrets.CODECOV_TOKEN}}
